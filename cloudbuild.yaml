steps:

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------

- name: 'gcr.io/cloud-builders/mvn'
  dir: 'config-server'
  args: ['package', '-DskipTests']
  id: 'Package Config Server'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/config-server', './config-server' ]
  id: 'Build Config Server Docker Image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/config-server' ]
  id: 'Push Config Server Docker Image'
  
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------

- name: 'gcr.io/cloud-builders/mvn'
  dir: 'eureka-server'
  args: ['package', '-DskipTests']
  id: 'Package Eureka Server'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/eureka-server', './eureka-server' ]
  id: 'Build Eureka Server Docker Image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/eureka-server' ]
  id: 'Push Eureka Server Docker Image'
  
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------

- name: 'gcr.io/cloud-builders/mvn'
  dir: 'employee-service'
  args: ['package', '-DskipTests']
  id: 'Package Employee Service'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/employee-service', './employee-service' ]
  id: 'Build Employee Service Docker Image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/employee-service' ]
  id: 'Push Employee Service Docker Image'
  
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------

- name: 'gcr.io/cloud-builders/mvn'
  dir: 'reservation-service'
  args: ['package', '-DskipTests']
  id: 'Package Reservation Service'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/reservation-service', './reservation-service' ]
  id: 'Build Reservation Service Docker Image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/reservation-service' ]
  id: 'Push Reservation Service Docker Image'
  
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------

- name: 'gcr.io/cloud-builders/mvn'
  dir: 'restaurant-order-service'
  args: ['package', '-DskipTests']
  id: 'Package Restaurant Order Service'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/restaurant-order-service', './restaurant-order-service' ]
  id: 'Build Restaurant Order Service Docker Image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/restaurant-order-service' ]
  id: 'Push Restaurant Order Service Docker Image'
  
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------

- name: 'gcr.io/cloud-builders/mvn'
  dir: 'review-service'
  args: ['package', '-DskipTests']
  id: 'Package Review Service'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/review-service', './review-service' ]
  id: 'Build Review Service Docker Image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/review-service' ]
  id: 'Push Review Service Docker Image'
  
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------

- name: 'gcr.io/cloud-builders/mvn'
  dir: 'virtual-waiter-service'
  args: ['package', '-DskipTests']
  id: 'Package Virtual Waiter Service'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/virtual-waiter-service', './virtual-waiter-service' ]
  id: 'Build Virtual Waiter Service Docker Image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/virtual-waiter-service' ]
  id: 'Push Virtual Waiter Service Docker Image'
  
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------

- name: 'gcr.io/cloud-builders/mvn'
  dir: 'api-gateway'
  args: ['package', '-DskipTests']
  id: 'Package API Gateway'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/api-gateway', './api-gateway' ]
  id: 'Build API Gateway Docker Image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/impressive-tome-429713-e9/hrmis-artifact-registry/api-gateway' ]
  id: 'Push API Gateway Docker Image'
  
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------

- name: 'google/cloud-sdk:latest'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |
    gcloud deploy apply --file deploy/pipeline.yaml --region=us-central1
    gcloud deploy apply --file deploy/dev.yaml --region=us-central1
    gcloud deploy releases create 'app-release-${SHORT_SHA}' --delivery-pipeline=gke-cicd-pipeline --region=us-central1 --skaffold-file=skaffold.yaml


options:
  logging: CLOUD_LOGGING_ONLY